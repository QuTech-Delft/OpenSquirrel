# Generated from CQasm3.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,17,127,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,1,1,1,1,1,1,2,1,
        2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,
        7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
        11,1,11,5,11,74,8,11,10,11,12,11,77,9,11,1,12,4,12,80,8,12,11,12,
        12,12,81,1,12,1,12,5,12,86,8,12,10,12,12,12,89,9,12,1,13,4,13,92,
        8,13,11,13,12,13,93,1,14,4,14,97,8,14,11,14,12,14,98,1,14,1,14,1,
        15,1,15,1,15,1,15,5,15,107,8,15,10,15,12,15,110,9,15,1,15,1,15,1,
        16,1,16,1,16,1,16,5,16,118,8,16,10,16,12,16,121,9,16,1,16,1,16,1,
        16,1,16,1,16,1,119,0,17,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,1,0,6,2,0,65,90,
        97,122,3,0,48,57,65,90,97,122,1,0,48,57,1,0,46,46,2,0,9,9,32,32,
        2,0,10,10,13,13,133,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,1,35,1,0,0,0,3,37,1,0,
        0,0,5,40,1,0,0,0,7,42,1,0,0,0,9,46,1,0,0,0,11,53,1,0,0,0,13,55,1,
        0,0,0,15,57,1,0,0,0,17,59,1,0,0,0,19,61,1,0,0,0,21,63,1,0,0,0,23,
        71,1,0,0,0,25,79,1,0,0,0,27,91,1,0,0,0,29,96,1,0,0,0,31,102,1,0,
        0,0,33,113,1,0,0,0,35,36,5,59,0,0,36,2,1,0,0,0,37,38,5,13,0,0,38,
        39,5,10,0,0,39,4,1,0,0,0,40,41,5,10,0,0,41,6,1,0,0,0,42,43,5,51,
        0,0,43,44,5,46,0,0,44,45,5,48,0,0,45,8,1,0,0,0,46,47,5,113,0,0,47,
        48,5,117,0,0,48,49,5,98,0,0,49,50,5,105,0,0,50,51,5,116,0,0,51,52,
        5,91,0,0,52,10,1,0,0,0,53,54,5,93,0,0,54,12,1,0,0,0,55,56,5,44,0,
        0,56,14,1,0,0,0,57,58,5,91,0,0,58,16,1,0,0,0,59,60,5,58,0,0,60,18,
        1,0,0,0,61,62,5,45,0,0,62,20,1,0,0,0,63,64,5,118,0,0,64,65,5,101,
        0,0,65,66,5,114,0,0,66,67,5,115,0,0,67,68,5,105,0,0,68,69,5,111,
        0,0,69,70,5,110,0,0,70,22,1,0,0,0,71,75,7,0,0,0,72,74,7,1,0,0,73,
        72,1,0,0,0,74,77,1,0,0,0,75,73,1,0,0,0,75,76,1,0,0,0,76,24,1,0,0,
        0,77,75,1,0,0,0,78,80,7,2,0,0,79,78,1,0,0,0,80,81,1,0,0,0,81,79,
        1,0,0,0,81,82,1,0,0,0,82,83,1,0,0,0,83,87,7,3,0,0,84,86,7,2,0,0,
        85,84,1,0,0,0,86,89,1,0,0,0,87,85,1,0,0,0,87,88,1,0,0,0,88,26,1,
        0,0,0,89,87,1,0,0,0,90,92,7,2,0,0,91,90,1,0,0,0,92,93,1,0,0,0,93,
        91,1,0,0,0,93,94,1,0,0,0,94,28,1,0,0,0,95,97,7,4,0,0,96,95,1,0,0,
        0,97,98,1,0,0,0,98,96,1,0,0,0,98,99,1,0,0,0,99,100,1,0,0,0,100,101,
        6,14,0,0,101,30,1,0,0,0,102,103,5,47,0,0,103,104,5,47,0,0,104,108,
        1,0,0,0,105,107,8,5,0,0,106,105,1,0,0,0,107,110,1,0,0,0,108,106,
        1,0,0,0,108,109,1,0,0,0,109,111,1,0,0,0,110,108,1,0,0,0,111,112,
        6,15,0,0,112,32,1,0,0,0,113,114,5,47,0,0,114,115,5,42,0,0,115,119,
        1,0,0,0,116,118,9,0,0,0,117,116,1,0,0,0,118,121,1,0,0,0,119,120,
        1,0,0,0,119,117,1,0,0,0,120,122,1,0,0,0,121,119,1,0,0,0,122,123,
        5,42,0,0,123,124,5,47,0,0,124,125,1,0,0,0,125,126,6,16,0,0,126,34,
        1,0,0,0,8,0,75,81,87,93,98,108,119,1,6,0,0
    ]

class CQasm3Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    VERSION = 11
    ID = 12
    FLOAT = 13
    INT = 14
    WS = 15
    COMMENT = 16
    MULTILINE_COMMENT = 17

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'\\r\\n'", "'\\n'", "'3.0'", "'qubit['", "']'", "','", 
            "'['", "':'", "'-'", "'version'" ]

    symbolicNames = [ "<INVALID>",
            "VERSION", "ID", "FLOAT", "INT", "WS", "COMMENT", "MULTILINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "VERSION", "ID", "FLOAT", "INT", 
                  "WS", "COMMENT", "MULTILINE_COMMENT" ]

    grammarFileName = "CQasm3.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


